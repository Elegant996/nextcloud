name: Build release
on:
  workflow_call:
    inputs:
      branch:
        description: 'App branch'
        type: string
        default: 'master'
      existingTag:
        description: 'Current release tag'
        type: string
        required: true
      releaseVersion:
        description: 'Version to be released'
        type: string
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    strategy:
      fail-fast: true
      matrix:
        arch: ["amd64"]
        include:
          - arch: amd64
            os: ubuntu-latest

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Sanitize repo slug
      uses: actions/github-script@v7
      id: repo_slug
      with:
        result-encoding: string
        script: return '${{ github.repository }}'.toLowerCase()
    
    - uses: actions/checkout@v4
      with:
        ref: '${{ inputs.existingTag }}'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      continue-on-error: true
      id: buildx1
      with:
        build-args: |
          VERSION=${{ inputs.releaseVersion }}
        context: .
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: |
          ghcr.io/${{ steps.repo_slug.outputs.result }}:${{ inputs.releaseVersion }}
          ghcr.io/${{ steps.repo_slug.outputs.result }}:latest

    # Temp workaround for failed builds
    - name: Wait to retry
      if: steps.buildx1.outcome != 'success'
      run: |
        sleep 60

    # Temp workaround for failed builds
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      if: steps.buildx1.outcome != 'success'
      with:
        build-args: |
          VERSION=${{ inputs.releaseVersion }}
        context: .
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: |
          ghcr.io/${{ steps.repo_slug.outputs.result }}:${{ inputs.releaseVersion }}-fpm-alpine
          ghcr.io/${{ steps.repo_slug.outputs.result }}:${{ inputs.releaseVersion }}
          ghcr.io/${{ steps.repo_slug.outputs.result }}:latest

    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.3.1
      with:
        mytoken: ${{ github.token }}
        head-ref: 'v${{ inputs.releaseVersion }}'
        base-ref: '${{ inputs.existingTag }}'

    - name: Publish release
      uses: ncipollo/release-action@v1.14.0
      with:
        prerelease: ${{ inputs.Branch != 'master' }}
        tag: 'v${{ inputs.releaseVersion }}'
        body: |
          Changes in this Release: 
          ${{ steps.changelog.outputs.changelog }}