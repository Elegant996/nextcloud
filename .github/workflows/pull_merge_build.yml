name: Dependabot auto-approve
on: pull_request

permissions:
  pull-requests: write

jobs:
  dependabot:
    name: 'Dependabot updates'
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}

    outputs:
      newVersion: '${{ steps.dependabot.outputs.new-version }}'
      dockerUpdate: ${{ steps.dependabot.outputs.package-ecosystem == 'docker' }}

    steps:
    - name: Dependabot metadata
      id: metadata
      uses: dependabot/fetch-metadata@v2
      with:
        github-token: "${{ github.token }}"

    - name: Approve a PR
      run: gh pr review --approve "$PR_URL"
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GITHUB_TOKEN: ${{ github.token }}

    - name: Auto-merge docker PRs
      if: ${{ steps.dependabot.outputs.package-ecosystem == 'docker' }}
      run: |
        gh pr merge --auto --squash "$PR_URL"
        echo
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GITHUB_TOKEN: ${{ github.token }}

  update-docs:
    name: 'Update documents'
    runs-on: ubuntu-latest
    needs: dependabot

    permissions:
      contents: write

    outputs:
      oldTag: 'v${{ steps.current.outputs.VERSION }}'

    steps:
    - name: Get current release
      id: current
      run: |
        eval "$(curl -sL --request GET \
          --url "https://api.github.com/repos/Elegant996/nextcloud/releases" \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: token ${{ github.token }}" \
          | jq -r 'first(.[]) | "export TAG=\(.tag_name)"')"

        echo "VERSION=${TAG//v}" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Update Readme
      uses: MathieuSoysal/file-updater-for-release@v1.0.3
      with:
        files: README.md
        version: '${{ needs.dependabot.outputs.newVersion }}'
        old-version: '${{ steps.current.outputs.VERSION }}'
        with-checkout: false
    
    - name: Push changes
      uses: EndBug/add-and-commit@v9
      with:
        committer_name: GitHub Actions
        committer_email: actions@github.com
        message: 'docs: Bump image version to ${{ needs.dependabot.outputs.newVersion }}'
        tag: 'v${{ needs.dependabot.outputs.newVersion }}'

  build-image:
    name: 'Build docker image'
    runs-on: ubuntu-latest
    needs: [ dependabot, update-docs ]
    if: ${{ needs.dependabot.outputs.dockerUpdate }} == 'true'

    permissions:
      contents: write
      packages: write

    strategy:
      fail-fast: true
      matrix:
        arch: ["amd64"]
        include:
          - arch: amd64
            os: ubuntu-latest

    env:
      new_tag: 'v${{ needs.update-docs.outputs.newVersion }}'
      old_tag: '${{ needs.update-docs.outputs.oldTag }}'
      version: '${{ needs.dependabot.outputs.newVersion }}'

    steps:
    - uses: actions/checkout@v4
      with:
        tag: '${{ env.version }}'

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Sanitize repo slug
      uses: actions/github-script@v7
      id: repo_slug
      with:
        result-encoding: string
        script: return '${{ github.repository }}'.toLowerCase()

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      continue-on-error: true
      id: buildx1
      with:
        build-args: |
          VERSION=${{ env.version }}
        context: .
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: |
          ghcr.io/${{ steps.repo_slug.outputs.result }}:${{ env.version }}
          ghcr.io/${{ steps.repo_slug.outputs.result }}:latest

    # Temp workaround for failed builds
    - name: Wait to retry
      if: steps.buildx1.outcome != 'success'
      run: |
        sleep 60

    # Temp workaround for failed builds
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      if: steps.buildx1.outcome != 'success'
      with:
        build-args: |
          VERSION=${{ env.version }}
        context: .
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: |
          ghcr.io/${{ steps.repo_slug.outputs.result }}:${{ env.version }}
          ghcr.io/${{ steps.repo_slug.outputs.result }}:latest

    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.3.1
      with:
        mytoken: ${{ github.token }}
        head-ref: '${{ env.new_tag }}'
        base-ref: '${{ env.old_tag }}'

    - name: Publish release
      uses: ncipollo/release-action@v1.14.0
      with:
        tag: '${{ env.version }}'
        body: |
          Changes in this Release: 
          ${{ steps.changelog.outputs.changelog }}