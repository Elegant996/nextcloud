name: Add changelog to release
on:
  release:
    types: [published]

jobs:
  update-release:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Get previous release
        id: previous-release
        run: |
          tag=$(curl -sL --request GET \
            --url "${{ github.api_url }}/repos/${{ github.repository }}/releases" \
            --header "Accept: application/vnd.github+json" \
            --header "Authorization: token ${{ github.token }}" \
            | jq -r 'nth(1) | .tag_name')
        
          echo "tag=${tag}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.6.2
        with:
          mytoken: ${{ github.token }}
          head-ref: ${{ github.ref_name }}
          base-ref: ${{ steps.previous-release.outputs.tag }}

      - name: Update release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          body: |
              Changes in this Release: 
              ${{ steps.changelog.outputs.changelog }}

  build:
    name: Build images
    runs-on: ubuntu-latest

    permissions:
      packages: write

    strategy:     
      fail-fast: true
      matrix:
        arch: ["amd64"]

    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Sanitize repo slug
        uses: actions/github-script@v7
        id: repo-slug
        with:
          result-encoding: string
          script: return '${{ github.repository }}'.toLowerCase()

      - name: Get release version
        id: release
        run: |
          version="${{ github.event.release.tag_name }}"
          echo "version=${version//v}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.repo-slug.outputs.result }}
          tags: |
            type=raw,priority=900,value=${{ steps.release.outputs.version }},suffix=-fpm-alpine
            type=raw,priority=800,value=${{ steps.release.outputs.version }}
          labels: |
            org.opencontainers.image.source="https://github.com/nextcloud/server"
            org.opencontainers.image.url="https://nextcloud.com/"

      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        continue-on-error: true
        id: buildx1
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Temp workaround for failed builds
      - name: Wait to retry
        if: steps.buildx1.outcome != 'success'
        run: |
          sleep 60

      # Temp workaround for failed builds
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        if: steps.buildx1.outcome != 'success'
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}